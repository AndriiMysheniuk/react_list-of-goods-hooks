{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","id","name","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","reverseList","preparedGoods","sort","good1","good2","NAME","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAMKA,E,oFAAAA,K,YAAAA,E,iBAAAA,M,KAKL,IAAMC,EAAkB,CACtB,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WA4BlB,IA6DeC,EA7DO,WACpB,MAAkCC,mBAAwB,IAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAA1B,GAEuD,IADnDL,EACkD,EADlDA,UAAWM,EACuC,EADvCA,YAETC,EAAa,YAAOF,GAmBxB,OAjBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKN,EAASiB,KACZ,OAAOF,EAAMZ,KAAKe,cAAcF,EAAMb,MACxC,KAAKH,EAASmB,OACZ,OAAOJ,EAAMZ,KAAKiB,OAASJ,EAAMb,KAAKiB,OACxC,QACE,OAAO,MAKXR,IACFC,EAAgBA,EAAcQ,WAGzBR,EAOcS,CAAiBrB,EACpC,CAAEK,YAAWM,YAAaJ,IAE5B,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYnB,IAAcN,EAASiB,OACvCS,QAAS,kBAAMnB,EAAaP,EAASiB,OAJvC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYnB,IAAcN,EAASmB,SACvCO,QAAS,kBAAMnB,EAAaP,EAASmB,SAJvC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAajB,IAClDkB,QAAS,kBAAMjB,GAAeD,IAHhC,sBAQEF,GAAaE,IACb,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,EAAa,IACbE,GAAc,IALlB,sBAaJ,6BACGC,EAAaiB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,EAAKzB,MADgByB,EAAK1B,aClGvC2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5871f88a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  NAME = 'name',\n  LENGTH = 'length',\n}\n\nconst goodsFromServer = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n\nfunction getPreparedGoods(goods: { id: number; name: string }[],\n  { sortField, reverseList }:\n  { sortField: SortType | ''; reverseList: boolean }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.NAME:\n          return good1.name.localeCompare(good2.name);\n        case SortType.LENGTH:\n          return good1.name.length - good2.name.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseList) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nconst App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType | ''>('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseList: isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortType.NAME })}\n          onClick={() => setSortField(SortType.NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortType.LENGTH })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li data-cy=\"Good\" key={good.id}>\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}